class Solution:
    def numberOfWays(self, numPeople: int) -> int:
        #can never shake hands with i+2
        #if shake hands with i+3, reduces problem to n-2 for that person's shake
        #maybe pick one person, see how many ways they can shake and if we can reduce for each of those shakes
        #for i, if shake with i-1, that's a count of n-2 for that shake
        #and if shake with i+1, that's also a count of n-2 for that shake
        #can't shake with i+2 or i-2
        #if shake with i+3 or i-3, that forces i+1 to shake with i+2, and reduces that it to n-4
        #can't shake with i+4 or -4, cause that's 3 in between, odd in between which leaves one unshaking
        #if shake with i+5 or i-5, that reduces problem to n=4 on left * n-6 on right
        #etc, for all the way to halfway around the circle
        #ie i + n/2
        mod = 10**9 + 7
        #
        memo = {}
        memo[0] = 1
        memo[2] = 1
        memo[4] = 2
        memo[6] = 5
        def dp(n):
            res = 0
            if n in memo:
                return memo[n]
            for i in range(1, n, 2):
                res += dp(i-1)*dp(n-i-1)
            memo[n] = res
            return res
        return dp(numPeople)%mod
