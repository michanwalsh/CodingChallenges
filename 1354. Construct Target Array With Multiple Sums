class Solution:
    def isPossible(self, target: List[int]) -> bool:
        #max heap
        #once pull is 1, return True
        import heapq
        cursum = sum(target)
        heap = []
        for num in target:
            heapq.heappush(heap, -num)
        
        
        if len(target)==1:
            return target[0]==1
        while heap:
            x = heap[0]
            x *= -1
            if x <1:
                return False
            if x==1:
                return True
            if cursum - x==1:
                return True
            newx = x % (cursum-x)
            if newx <1:
                return False
            # while newx - (cursum-x) > -heap[0]:
            #     newx -= cursum - x
            
            cursum -= (x-newx)
            if newx == x:
                return False
            heapq.heapreplace(heap,-newx)
        return False
            
